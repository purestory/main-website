# Referer 기반 backend 선택 (tribler만 해당)
map $http_referer $api_backend {
    "~*tribler"           "http://localhost:8085";
}

# Referer 기반 tribler 검사
map $http_referer $is_tribler {
    default                "0";
    "~*tribler"           "1";
}

server {
    listen 80;
    server_name itsmyzone.iptime.org;
    
    # 큰 파일 업로드 지원
    client_max_body_size 50G;
    proxy_buffering off;
    proxy_connect_timeout 3600s;
    proxy_send_timeout 3600s;
    proxy_read_timeout 3600s;
    
    # 메인 페이지 설정
    location = / {
        root /home/purestory/main-website;
        try_files /index.html =404;
        
        # 캐시 설정
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # 정적 파일 (CSS, JS, 이미지 등)
    location ~ ^/(css|js|images|assets)/ {
        root /home/purestory/main-website;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # 루트 디렉토리의 CSS, JS 파일 처리
    location ~* \.(css|js)$ {
        root /home/purestory/main-website;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Whisper Service 설정
    location = /whisper {
        return 301 /whisper/;
    }
    
    location ^~ /whisper/ {
        alias /home/purestory/whisper/vite-frontend/dist/;
        index index.html;
        try_files $uri $uri/ /whisper/index.html;
        
        # 캐시 설정
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Whisper API 프록시
    location ^~ /whisper-api/ {
        rewrite ^/whisper-api/(.*)$ /$1 break;
        proxy_pass http://localhost:3401;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        client_max_body_size 50G;
    }
    
    # Translation Service 설정
    location = /translation {
        return 301 /translation/;
    }
    
    location ^~ /translation/ {
        alias /home/purestory/translation-service/vite-frontend/dist/;
        index index.html;
        try_files $uri $uri/ /translation/index.html;
        
        # 캐시 설정
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
        # Translation API 프록시
    location ^~ /translation-api/ {
        rewrite ^/translation-api/(.*)$ /api/$1 break;
        proxy_pass http://localhost:3501;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        client_max_body_size 50G;
    }

    # EdgeTTS Service 설정
    location = /edgetts {
        return 301 /edgetts/;
    }
    
    location ^~ /edgetts/ {
        alias /home/purestory/edgetts/frontend/dist/;
        index index.html;
        try_files $uri $uri/ /edgetts/index.html;
        
        # 캐시 설정
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # EdgeTTS API 프록시
    location ^~ /api/edgetts/ {
        rewrite ^/api/edgetts/(.*)$ /$1 break;
        proxy_pass http://localhost:3701;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        client_max_body_size 50G;
    }

    # Tribler API (우선순위 높음)
    location ^~ /tribler/api/ {
        # 트레일링 슬래시 제거
        rewrite ^/tribler/api/(.*)/$  /tribler/api/$1 redirect;
        rewrite ^/tribler/api/(.*)$ /api/$1 break;
        proxy_pass http://localhost:8085;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        client_max_body_size 50G;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Tribler locales
    location ^~ /tribler/locales/ {
        rewrite ^/tribler/locales/(.*)$ /locales/$1 break;
        proxy_pass http://localhost:8085;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Tribler UI locales
    location ^~ /tribler/ui/locales/ {
        rewrite ^/tribler/ui/locales/(.*)$ /ui/locales/$1 break;
        proxy_pass http://localhost:8085;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 직접 API 접속 차단 (tribler에서 오면 리다이렉트)
    location /api/ {
        if ($is_tribler = "1") {
            return 301 /tribler$request_uri;
        }
        return 404;
    }

    # 직접 locales 접속 차단 (tribler에서 오면 리다이렉트)
    location /locales/ {
        if ($is_tribler = "1") {
            return 301 /tribler$request_uri;
        }
        return 404;
    }

    # 직접 ui/locales 접속 차단 (tribler에서 오면 리다이렉트)
    location /ui/locales/ {
        if ($is_tribler = "1") {
            return 301 /tribler$request_uri;
        }
        return 404;
    }

    # Tribler 웹 UI
    location ^~ /tribler/ {
        rewrite ^/tribler/(.*)$ /$1 break;
        proxy_pass http://localhost:8085/;
        proxy_redirect / /tribler/;
        
        # 캐시 완전 무효화
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # 압축 해제하여 sub_filter 작동하게 함
        proxy_set_header Accept-Encoding "";
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        client_max_body_size 50G;
        
        # JavaScript 경로 수정 (더 포괄적)
        sub_filter '"/api/' '"/tribler/api/';
        sub_filter "'/api/" "'/tribler/api/";
        sub_filter '"/locales/' '"/tribler/locales/';
        sub_filter "'/locales/" "'/tribler/locales/";
        sub_filter '"/ui/locales/' '"/tribler/ui/locales/';
        sub_filter "'/ui/locales/" "'/tribler/ui/locales/";
        sub_filter '"/ui/' '"/tribler/ui/';
        sub_filter "'/ui/" "'/tribler/ui/";
        sub_filter '"/events/' '"/tribler/api/events/';
        sub_filter "'/events/" "'/tribler/api/events/";
        sub_filter_once off;
        sub_filter_types *;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    location /tribler {
        return 301 /tribler/;
    }
    
    # explorer 설정
    location = /explorer {
        rewrite ^ /explorer/ permanent;
    }
    
    location /explorer/ {
        alias /home/purestory/explorer/frontend/;
        index index.html;
        try_files $uri $uri.html $uri/ /explorer/index.html;
    }
    
    # explorer API 설정
    location /explorer-api/ {
        rewrite ^/explorer-api/(.*)$ /$1 break;
        proxy_pass http://localhost:3301;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        client_max_body_size 50G;
    }
    
    # Cobalt API 설정 (우선순위 높음 - 웹 UI보다 먼저)
    location ^~ /cobalt/api/ {
        rewrite ^/cobalt/api/(.*)$ /$1 break;
        proxy_pass http://localhost:3601;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Cobalt 웹 UI 설정 (Vite React)
    location = /cobalt {
        return 301 /cobalt/;
    }
    
    location ^~ /cobalt/ {
        alias /home/purestory/cobalt/vite-frontend/dist/;
        index index.html;
        try_files $uri $uri/ /cobalt/index.html;
        
        # 정적 파일 캐싱 설정
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Amica 웹 UI - BASE_PATH 방식 사용
    location = /amica {
        return 301 /amica/;
    }

    location ^~ /amica/ {
        proxy_pass http://localhost:3100/amica/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        client_max_body_size 50G;
        proxy_cache_bypass $http_upgrade;
    }

    # Zonos 웹 UI
    location = /zonos {
        return 301 /zonos/;
    }

    location ^~ /zonos/ {
        proxy_pass http://localhost:7860/;
        
        # 캐시 완전 무효화
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        client_max_body_size 50G;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

        # WebTools 웹 UI
    location = /webtools {
        return 301 /webtools/;
    }
    
    location ^~ /webtools/ {
        alias /home/purestory/webtools/frontend/;
        index index.html;
        try_files $uri $uri/ /webtools/index.html;
        
        # 캐시 설정
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # WebTools API 프록시
    location ^~ /webtools-api/ {
        rewrite ^/webtools-api/(.*)$ /$1 break;
        proxy_pass http://localhost:3801;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 클라이언트 실제 IP 전달 개선
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Remote-Addr $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        
        proxy_buffering off;
        client_max_body_size 100M;
    }

    # 파비콘 처리 - Zonos에서 가져오기
    location = /favicon.ico {
        proxy_pass http://localhost:7860/favicon.ico;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # robots.txt 처리 - Zonos에서 가져오기
    location = /robots.txt {
        proxy_pass http://localhost:7860/robots.txt;
        proxy_set_header Host $host;
        expires 1d;
    }

    # manifest.json, sitemap.xml 등 기타 root 파일들
    location ~* ^/(manifest\.json|sitemap\.xml|browserconfig\.xml)$ {
        proxy_pass http://localhost:7860$request_uri;
        proxy_set_header Host $host;
        expires 1d;
    }
    
    # 기본 에러 페이지
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 